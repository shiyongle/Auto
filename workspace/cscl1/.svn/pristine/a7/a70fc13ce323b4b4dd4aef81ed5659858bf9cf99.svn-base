<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="CL_Address">

    <resultMap id="CL_AddressMap" type="com.pc.model.CL_Address">
        <result property="id" column="id"/>
        <result property="userRoleId" column="user_role_id"/>
        <result property="addressName" column="address_name"/>
        <result property="linkMan" column="link_man"/>
        <result property="linkPhone" column="link_phone"/>
        <result property="type" column="type"/>
        <result property="latitude" column="latitude"/>
        <result property="longitude" column="longitude"/>
        <result property="createTime" column="create_time"/>
        <result property="lastEditTime" column="last_edit_time"/>
    </resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
        id ,user_role_id,address_name ,link_man ,link_phone ,type,latitude,longitude,create_time,last_edit_time
	    ]]>
	</sql>
	
    <insert id="insert" >
    <![CDATA[
        INSERT INTO cl_address (
	        id  ,
	        user_role_id ,
	        address_name  ,
	        link_man  ,
	        link_phone  ,
	        type ,
	        latitude,
	        longitude,
	        create_time,
	        last_edit_time
        ) VALUES (
        	#{id, jdbcType=INTEGER} ,
        	#{userRoleId, jdbcType=INTEGER} ,
        	#{addressName, jdbcType=VARCHAR} ,
        	#{linkMan, jdbcType=VARCHAR} ,
        	#{linkPhone, jdbcType=VARCHAR} ,
        	#{type, jdbcType=INTEGER} ,
        	#{latitude, jdbcType=VARCHAR} ,
        	#{longitude, jdbcType=VARCHAR},
        	#{createTime, jdbcType=TIMESTAMP} ,
        	#{lastEditTime, jdbcType=TIMESTAMP} 
        )
    ]]>
    </insert>

    <update id="update" >
    <![CDATA[
        UPDATE cl_address SET
	        address_name = #{addressName, jdbcType=VARCHAR} ,
	        link_man = #{linkMan, jdbcType=VARCHAR} ,
	        link_phone = #{linkPhone, jdbcType=VARCHAR} ,
	        latitude = #{latitude, jdbcType=VARCHAR} ,
	        longitude = #{longitude, jdbcType=VARCHAR} ,
	        last_edit_time=#{lastEditTime, jdbcType=TIMESTAMP} 
        WHERE 
	        id = #{id} 
    ]]>
    </update>

    <delete id="delete">
    <![CDATA[
        DELETE FROM cl_address WHERE
        id = #{id} 
    ]]>
    </delete>
    
    <select id="getById" resultMap="CL_AddressMap">
	    SELECT <include refid="columns"/>
	    <![CDATA[
	        FROM cl_address 
	        WHERE 
		        id = #{id} 
	    ]]>
    </select>

	<sql id="findWhere">
	    <where>
		   	<if test="@Ognl@isNotEmpty(type)">
			    AND type = #{type}
			</if>
			<if test="@Ognl@isNotEmpty(userRoleId)">
			    AND user_role_id = #{userRoleId}
			</if>
	    </where>
	</sql>
	 
    <select id="findPageCount" resultType="long">
        SELECT count(*) FROM cl_address <include refid="findWhere"/>    
    </select>
    
    <select id="findPage" resultMap="CL_AddressMap">
    	SELECT <include refid="columns"/> FROM cl_address 
		<include refid="findWhere"/>
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>

	
	<select id="find" resultMap="CL_AddressMap">
	    SELECT <include refid="columns"/> FROM cl_address 
		<include refid="findWhere"/>
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>
    
    <select id="isExist" resultType="int">
    	select count(id) from cl_address where id=#{id}
    </select>
		
</mapper>

