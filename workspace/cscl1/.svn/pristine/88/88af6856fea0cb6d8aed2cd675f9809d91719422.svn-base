<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="CL_Rating">

    <resultMap id="CL_RatingMap" type="com.pc.model.CL_Rating">
        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="carNum" column="carNum"/>
        <result property="orderNum" column="orderNum"/>
        <result property="estimate" column="estimate"/>
        <result property="remark" column="remark"/>
        <result property="esTime" column="es_time"/>
        <result property="service" column="service"/>
        <result property="timeliness"  column="timeliness" />
        <result property="complete" column="complete"/>
        <result property="ratingType" column="rating_type" />
        <result property="ratingScore" column="rating_score"/>
    </resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
            id,name,carNum,orderNum,estimate,remark,es_time,service,timeliness,complete,rating_type,rating_score
	    ]]>
	</sql>

    <insert id="insert" >
    <![CDATA[
        INSERT INTO cl_rating (
	        name  ,
	        carNum  ,
	        orderNum,
	        estimate  ,
	        remark  ,
	        es_time,
	        service ,
	        timeliness,
	        complete,
	        rating_type,
	        rating_score
        ) VALUES (
        	#{name, jdbcType=VARCHAR} ,
        	#{carNum, jdbcType=VARCHAR} ,
        	#{orderNum, jdbcType=VARCHAR} ,
        	#{estimate, jdbcType=INTEGER} ,
        	#{remark, jdbcType=VARCHAR} ,
        	#{esTime, jdbcType=TIMESTAMP},
        	#{service,jdbcType=DECIMAL},
        	#{timeliness,jdbcType=DECIMAL},
        	#{complete,jdbcType=DECIMAL},
        	#{ratingType, jdbcType=INTEGER} ,
        	#{ratingScore, jdbcType=DECIMAL} 
      	 )
   	 ]]>
    </insert>
    
    <update id="update" >
    <![CDATA[
        UPDATE cl_rating SET
	        name=#{name,jdbcType=VARCHAR},
	        orderNum=#{orderNum,jdbcType=VARCHAR},  
	        carNum=#{carNum,jdbcType=VARCHAR},  
	        estimate =#{estimate,jdbcType=INTEGER},  
	        remark=#{estimate,jdbcType=VARCHAR}  ,
	        es_time=#{esTime, jdbcType=TIMESTAMP},
	        service=#{service, jdbcType=DECIMAL},
	        timeliness=#{timeliness, jdbcType=DECIMAL},
	        complete=#{complete, jdbcType=DECIMAL},
	        rating_type=#{ratingType,jdbcType=INTEGER},
	        rating_score=#{ratingScore, jdbcType=DECIMAL} ,
        WHERE 
	        id = #{id} 
    ]]>
    </update>

    <delete id="delete">
    <![CDATA[
        DELETE FROM cl_rating WHERE
        id = #{id} 
    ]]>
    </delete>
    
    <select id="getById" resultMap="CL_RatingMap">
	    SELECT <include refid="columns"/>
	    <![CDATA[
	        FROM cl_rating 
	        WHERE 
		        id = #{id} 
	    ]]>
    </select>
    
 
    
    <select id="getByOrderNumAndType" resultMap="CL_RatingMap">
	    SELECT <include refid="columns"/>
	     <![CDATA[
	        FROM cl_rating
	        WHERE 
		        orderNum=#{orderNum} and rating_type=#{ratingType}
		  ]]>
    </select>

	<sql id="findWhere">
	    <where>
		   	<if test="@Ognl@isNotEmpty(id)">
			    AND id = #{id}
			</if>
			<if test="@Ognl@isNotEmpty(number)">
			    AND co.number LIKE CONCAT('%',#{number},'%')
			</if>
	    </where>
	</sql>
	 
    <select id="findPageCount" resultType="long">
        SELECT count(*) FROM cl_rating <include refid="findWhere"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 #offset#,#pageSize#,#lastRows# 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findPage" resultMap="CL_RatingMap">
    	SELECT <include refid="columns"/> FROM cl_rating 
		<include refid="findWhere"/>
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>

	
	<select id="find" resultMap="CL_RatingMap">
	    SELECT <include refid="columns"/> FROM cl_rating 
		<include refid="findWhere"/>
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>
    
    
    <select id="findRatePageCount" resultType="long">
    	SELECT count(*) FROM cl_order co 
    	LEFT JOIN cl_rating cr1 ON (co.number=cr1.orderNum)
		<include refid="findWhere"/>    
    </select>
    
    
    <select id="findRatePage" resultMap="CL_RatingMap">
    	SELECT co.id orderid,co.number,cr1.* FROM cl_order co 
    	LEFT JOIN cl_rating cr1 ON (co.number=cr1.orderNum)
		<include refid="findWhere"/>
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>
	
</mapper>

