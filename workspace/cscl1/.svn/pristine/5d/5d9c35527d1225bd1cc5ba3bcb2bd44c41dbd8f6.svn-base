<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Cl_Upload">

    <resultMap id="ClUploadMap" type="com.pc.model.Cl_Upload">
        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="url" column="url"/>
        <result property="parentId" column="parent_id"/>
        <result property="createTime" column="create_time"/>
        <result property="createId" column="create_id"/>
        <result property="modelName" column="model_name"/>
        <result property="type" column="type"/>
        <result property="remark" column="remark"/>
        <result property="smallurl" column="smallurl"/>
    </resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
        id ,name ,url ,parent_id ,create_time ,create_id ,model_name,type,remark,smallurl
	    ]]>
	</sql>
	
   <insert id="insert"  useGeneratedKeys="true"  keyProperty="id"  >
    <![CDATA[
        INSERT INTO cl_upload (
	        id  ,
	        name  ,
	        url  ,
	        parent_id  ,
	        create_time  ,
	        create_id  ,
	        model_name  ,
	        type,
	        remark,
	        smallurl
        ) VALUES (
        	#{id, jdbcType=INTEGER} ,
        	#{name, jdbcType=VARCHAR} ,
        	#{url, jdbcType=VARCHAR} ,
        	#{parentId, jdbcType=INTEGER} ,
        	#{createTime, jdbcType=TIMESTAMP} ,
        	#{createId, jdbcType=INTEGER} ,
        	#{modelName, jdbcType=VARCHAR} ,
        	#{type, jdbcType=INTEGER} ,
        	#{remark, jdbcType=VARCHAR} ,
        	#{smallurl, jdbcType=VARCHAR}
        )
    ]]>
    </insert>

    <update id="update" >
    <![CDATA[
         UPDATE cl_upload SET
	        name = #{name, jdbcType=VARCHAR} ,
	        url = #{url, jdbcType=VARCHAR} ,
	        parent_id = #{parentId, jdbcType=INTEGER} ,
	        create_time = #{createTime, jdbcType=TIMESTAMP} ,
	        create_id = #{createId, jdbcType=INTEGER} ,
	        model_name = #{modelName, jdbcType=VARCHAR} ,
	        type = #{type, jdbcType=INTEGER} ,
	        remark=#{remark,jdbcType=VARCHAR} ,
	        smallurl=#{smallurl,jdbcType=VARCHAR}
        WHERE 
	        id = #{id} 
    ]]>
    </update>

    <delete id="delete">
    <![CDATA[
        DELETE FROM cl_upload WHERE
        id = #{id} 
    ]]>
    </delete>
    
    <delete id="deleteByParentId">
    <![CDATA[
        DELETE FROM cl_upload WHERE
        parent_id = #{parent_id} 
    ]]>
    </delete>
    
      <delete id="deleteByMode">
    <![CDATA[
        DELETE FROM cl_upload WHERE
        id = #{id} AND model_name=#{modelName}
    ]]>
    </delete>
    
    <select id="getById" resultMap="ClUploadMap">
	    SELECT <include refid="columns"/>
	    <![CDATA[
	        FROM cl_upload 
	        WHERE 
		        id = #{id} 
	    ]]>
    </select>
    
    
     <select id="getByOrderIdAndByMode" resultMap="ClUploadMap">
	    SELECT <include refid="columns"/>
	    <![CDATA[
	        FROM cl_upload 
	        WHERE 
		        parent_id = #{parentId}  and model_name=#{modelName}
	    ]]>
	    
    </select>
    
    <select id="indexappByType" resultMap="ClUploadMap">
	    SELECT <include refid="columns"/>
	    <![CDATA[
	        FROM cl_upload 
	        WHERE  type = #{type} and model_name='appindex'
	    ]]>
    </select>
    
    <select id="getCl_UploadsByParentId" resultMap="ClUploadMap">
	    SELECT <include refid="columns"/>
	    <![CDATA[
	        FROM cl_upload 
	        WHERE  parent_id=#{parentId}
	    ]]>
    </select>
    

	<sql id="findWhere">
	    <where>
		   	<if test="@Ognl@isNotEmpty(id)">
			    AND id = #{id}
			</if>
		   	<if test="@Ognl@isNotEmpty(parentId)">
			    AND parent_id = #{parentId}
			</if>
	    </where>
	</sql>
	 
    <select id="findPageCount" resultType="long">
        SELECT count(*) FROM cl_upload <include refid="findWhere"/>    
    </select>
    
     <select id="getTotal" resultType="long">
        SELECT count(*) FROM cl_upload  where model_name='appindex' and type=#{type}
    </select>
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 #offset#,#pageSize#,#lastRows# 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findPage" resultMap="ClUploadMap">
    	SELECT <include refid="columns"/> FROM cl_upload 
		<include refid="findWhere"/>
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>

	
	<select id="find" resultMap="ClUploadMap">
	    SELECT <include refid="columns"/> FROM cl_upload 
		<include refid="findWhere"/>
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>
    
    <select id="getLogByUser" resultType="long">
      	select count(id) 
    	<![CDATA[from cl_upload where create_id = #{create_id} and model_name = #{model_name} and create_time  >= #{create_time1} and create_time <=#{create_time2} ]]>
    </select>
    
	
</mapper>

