<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="CL_FinanceStatement">
	<resultMap id="CL_FinanceStatementMap" type="com.pc.model.CL_FinanceStatement">
		<result property="fid" column="fid" />
		<result property="fcreateTime" column="fcreate_time" />
		<result property="number" column="number" />
		<result property="frelatedId" column="frelated_id" />
		<result property="forderId" column="forder_id" />
		<result property="fbusinessType" column="fbusiness_type" />
		<result property="famount" column="famount" />
		<result property="ftype" column="ftype" />
		<result property="fuserid" column="fuserid" />
		<result property="fuserroleId" column="fuserrole_id" />
		<result property="fpayType" column="fpay_type" />
		<result property="fremark" column="fremark" />
		<result property="fbalance" column="fbalance" />
		<result property="fstatus" column="fstatus" />
		<result property="freight" column="freight" />
		<result property="fpayOrder" column="fpayOrder" />

	</resultMap>

	<!-- 用于select查询公用抽取的列 <sql id="columns"> <![CDATA[ bt.fid ,bt.fcreate_time,bt.number 
		,bt.frelated_id,bt.forder_id ,bt.fbusiness_type , bt.famount,bt.ftype,bt.fuserid,bt.fuserrole_id,bt.fpay_type,bt.fremark,user.vmi_user_name 
		fusername ]]> </sql> -->

	<!-- 用于select查询finance表的所有列 -->
	<sql id="columnsall">
	    <![CDATA[
        bt.fid ,bt.fcreate_time,bt.number ,bt.frelated_id ,bt.forder_id ,bt.fbusiness_type ,
        bt.famount,bt.ftype,bt.fuserid,bt.fuserrole_id,bt.fpay_type,bt.fremark,bt.fbalance,bt.freight,bt.fstatus,bt.fpayOrder
	    ]]>
	</sql>

	<!-- 用于select查询明细表关联表的列 -->

	<sql id="columns">
	    <![CDATA[
        bt.fid ,bt.fcreate_time,bt.number ,bt.frelated_id,bt.forder_id ,bt.fbusiness_type ,bt.fbalance,bt.fstatus,bt.freight,bt.fpayOrder,
        bt.famount,bt.ftype,bt.fuserid,bt.fuserrole_id,bt.fpay_type,bt.fremark,user.vmi_user_name fusername,user.vmi_user_phone fuserPhone,
	cf.fcreate_time cfapplytime,cf.fwithdraw_type cfwithdrawtype,cf.falipay_id cfalipayid,cf.fbank_account cfbankaccount,cf.fbank_name cfbankname,
	cf.fbank_address cfbankaddress,cf.ftreatment cftreatment,cf.fserial_num cfserialnum,cf.fstate cfstate,cf.freject_type cfrejecttype,car.driverName,uc.fname
	    ]]>
	</sql>

	<sql id="columnsPays">
	    <![CDATA[
        bt.fid ,bt.fcreate_time,ifnull(bt.number,ifnull(cf.number,bt.fid)) number,bt.frelated_id,bt.forder_id,case when bt.fbusiness_type=4 then 4 when bt.fbusiness_type=7 and cf.fid is null then 3 else 5 end fbusiness_type,
        bt.famount,bt.ftype,bt.fuserid,bt.fuserrole_id,bt.fpay_type,bt.fremark,user.vmi_user_name fusername,bt.fbalance,bt.fstatus,bt.freight,bt.fpayOrder,
	cf.fcreate_time cfapplytime,cf.fwithdraw_type cfwithdrawtype,cf.falipay_id cfalipayid,cf.fbank_account cfbankaccount,cf.fbank_name cfbankname,
	cf.fbank_address cfbankaddress,cf.ftreatment cftreatment,cf.fserial_num cfserialnum,cf.fstate cfstate,cf.freject_type cfrejecttype,car.driverName
	    ]]>
	</sql>

	<select id="getByNowTime" resultMap="CL_FinanceStatementMap">
		SELECT
		<include refid="columnsall" />
    	 <![CDATA[
    	 FROM cl_finance_statement bt INNER JOIN(
			SELECT MAX(number) as number FROM cl_finance_statement WHERE DATE_FORMAT(fcreate_time  ,'%Y-%m-%d')=DATE_FORMAT(#{nowTime},'%Y-%m-%d') 
		) fs1 on fs1.number = bt.number
		]]>
	</select>


	<select id="getByRelatedId" resultMap="CL_FinanceStatementMap">
		SELECT
		<include refid="columnsall" />
		FROM cl_finance_statement bt
		<include refid="findWhere" />
	</select>

	<select id="getByUserId" resultMap="CL_FinanceStatementMap">
		SELECT
		<include refid="columnsall" />  
    <![CDATA[
	  FROM cl_finance_statement bt
		WHERE
			fuserrole_id = #{userroleid}
	  ]]>
	</select>


	<select id="getByTypeAndBusType" resultMap="CL_FinanceStatementMap">
		SELECT
		<include refid="columnsall" />
		FROM cl_finance_statement bt
		WHERE
		ftype=#{ftype} AND fuserrole_id =
		#{userroleid}
	</select>


	<select id="getByUserIdAndCar" resultMap="CL_FinanceStatementMap">
    <![CDATA[
	 SELECT 	SUM(bt.famount * bt.ftype) as sumFamount,	car.carNum as carNum,	car.driverName as driverName 
	   FROM cl_finance_statement bt
		LEFT JOIN cl_car car ON car.user_role_id = bt.fuserrole_id
		LEFT JOIN cl_user_role usr ON usr.id = bt.fuserrole_id
		WHERE
			usr.role_id = 2 and bt.fcreate_time>=#{date}
		GROUP BY
			car.carNum,
			car.driverName
		ORDER BY
			SUM(bt.famount * bt.ftype)  DESC
		LIMIT 3
	  ]]>
	</select>

	<select id="getByNumber" resultMap="CL_FinanceStatementMap">
		SELECT
		<include refid="columnsall" />  
    <![CDATA[
	  FROM cl_finance_statement bt
		WHERE
			number = #{number}
	  ]]>
	</select>

	<select id="getByForderId" resultMap="CL_FinanceStatementMap">
		SELECT
		<include refid="columnsall" />  
    <![CDATA[
	  FROM cl_finance_statement bt
		WHERE
			bt.forder_id = #{forderId}
	  ]]>

		<if test="@Ognl@isNotEmpty(frelatedId)">
			AND bt.frelated_id = #{frelatedId}
		</if>
		<if test="@Ognl@isNotEmpty(fpaytype)">
			AND bt.fpay_type = #{fpaytype}
		</if>

		<if test="@Ognl@isNotEmpty(famount)">
			AND bt.famount = #{famount}
		</if>
		<if test="@Ognl@isNotEmpty(fbusinesstype)">
			AND bt.fbusiness_type = #{fbusinesstype}
		</if>


	</select>

	<insert id="insert">
    <![CDATA[
        INSERT INTO cl_finance_statement (
	        fid  ,
	        fcreate_time ,
	        number ,
	        frelated_id ,
	        forder_id ,
	        fbusiness_type ,
	        famount ,
	        ftype,
	        fuserid,
	        fuserrole_id,
	        fpay_type,
	        fremark,
	        fbalance,
	        fstatus,
	        freight,
	        fpayOrder
        ) VALUES (
        	#{fid, jdbcType=INTEGER} ,
        	#{fcreateTime, jdbcType=TIMESTAMP} ,
        	#{number, jdbcType=VARCHAR} ,
        	#{frelatedId, jdbcType=VARCHAR} ,
        	#{forderId, jdbcType=VARCHAR} ,
        	#{fbusinessType, jdbcType=INTEGER} ,
        	#{famount, jdbcType=DECIMAL} ,
        	#{ftype, jdbcType=INTEGER} ,
        	#{fuserid, jdbcType=VARCHAR} ,
        	#{fuserroleId, jdbcType=INTEGER} ,
        	#{fpayType, jdbcType=INTEGER} ,
        	#{fremark, jdbcType=VARCHAR} ,
        	#{fbalance, jdbcType=DECIMAL} ,
        	#{fstatus, jdbcType=INTEGER} ,
        	#{freight, jdbcType=DECIMAL} ,
        	#{fpayOrder, jdbcType=VARCHAR} 
        )
    ]]>
	</insert>

	<update id="update">
    <![CDATA[
    	UPDATE cl_finance_statement SET
        	forder_id=#{forderId, jdbcType=VARCHAR} ,
        	famount=#{famount, jdbcType=TIMESTAMP} ,
        	ftype=#{ftype, jdbcType=VARCHAR} ,
        	fpay_type=#{fpayType, jdbcType=VARCHAR} ,
        	fbalance=#{fbalance, jdbcType=DECIMAL} ,
        	fstatus=#{fstatus, jdbcType=INTEGER} ,
        	freight=#{freight, jdbcType=DECIMAL} ,
        	fpayOrder=#{fpayOrder, jdbcType=VARCHAR} ,
        	fremark=#{fremark, jdbcType=VARCHAR}
        WHERE 
	        fid = #{fid} 
    ]]>
	</update>

	<update id="updateStatusbyID">
    <![CDATA[
    	UPDATE cl_finance_statement SET
        	fbalance=#{fbalance, jdbcType=DECIMAL} ,
        	fstatus=#{fstatus, jdbcType=INTEGER} ,
        	fpayOrder=#{fpayOrder, jdbcType=VARCHAR}
        WHERE 
	        fid = #{fid} 
    ]]>
	</update>

	<delete id="delete">
    <![CDATA[
        DELETE FROM cl_finance_statement WHERE
        fid = #{fid} 
    ]]>
	</delete>

	<sql id="findWhere">
		<where>
			<if test="@Ognl@isNotEmpty(createTimeBegin)">
				AND bt.fcreate_time >= #{createTimeBegin}
			</if>
			<if test="@Ognl@isNotEmpty(createTimeEnd)">
				AND bt.fcreate_time &lt; #{createTimeEnd}
			</if>
			<if test="@Ognl@isNotEmpty(fusername)">
				AND user.vmi_user_name LIKE CONCAT('%',#{fusername},'%')
			</if>
			<if test="@Ognl@isNotEmpty(fuserPhone)">
				AND user.vmi_user_phone LIKE CONCAT('%',#{fuserPhone},'%')
			</if>
			<if test="@Ognl@isNotEmpty(forderid)">
				AND bt.forder_id LIKE CONCAT('%',#{forderid},'%')
			</if>
			<if test="@Ognl@isNotEmpty(ftype)">
				AND bt.ftype = #{ftype}
			</if>
			<if test="@Ognl@isNotEmpty(fpayType)">
				AND bt.fpay_type = #{fpayType}
			</if>
			<if test="@Ognl@isNotEmpty(fbusinessType)">
				AND bt.fbusiness_type = #{fbusinessType}
			</if>
			<if test="@Ognl@isNotEmpty(frelatedId)">
				AND bt.frelated_id = #{frelatedId}
			</if>
			<if test="@Ognl@isNotEmpty(fuserid)">
				AND bt.fuserrole_id = #{fuserid}
			</if>
			<if test="@Ognl@isNotEmpty(roleid)">
				AND user.role_id = #{roleid}
			</if>
			<if test="@Ognl@isNotEmpty(faddMoney)">
				AND bt.fadd_money > #{faddMoney}
			</if>
			<if test="@Ognl@isNotEmpty(fsaleMan)">
				AND bt.fsale_man LIKE CONCAT('%',#{fsaleMan},'%')
			</if>
			<if test="@Ognl@isNotEmpty(fcustName)">
				AND bt.fcust_name LIKE CONCAT('%',#{fcustName},'%')
			</if>
			<if test="@Ognl@isNotEmpty(fstatus)">
				AND bt.fstatus = #{fstatus}
			</if>
			<if test="@Ognl@isNotEmpty(freight)">
				AND bt.freight = #{freight}
			</if>
			<if test="@Ognl@isNotEmpty(fpayOrder)">
				AND bt.fpayOrder = #{fpayOrder}
			</if>
			<if test="@Ognl@isNotEmpty(fuserroleId)">
				AND bt.fuserrole_id = #{fuserroleId}
			</if>
			 <if test="@Ognl@isNotEmpty(ids)">
   		     	AND bt.fid IN <foreach item="item" collection="ids" open="(" separator="," close=")">
					#{item}
				</foreach>
   			</if>
		</where>
	</sql>

	<select id="findPageCount" resultType="long">
		SELECT count(*) FROM cl_finance_statement bt
		LEFT JOIN cl_finance cf ON
		cf.fid = bt.frelated_id
		LEFT JOIN cl_user_role user on user.id =
		bt.fuserrole_id
		LEFT JOIN cl_car car on car.user_role_id =
		bt.fuserrole_id
		<include refid="findWhere" />
	</select>

	<select id="findPage" resultMap="CL_FinanceStatementMap">
		SELECT
		<include refid="columns" />
		FROM cl_finance_statement bt
		LEFT JOIN cl_finance cf ON cf.fid =
		bt.frelated_id
		LEFT JOIN cl_user_role user on user.id = bt.fuserrole_id
		LEFT JOIN cl_car car on car.user_role_id = user.id
		left join
		cl_user_customer uc on uc.fuser_role_id = bt.fuserrole_id
		<include refid="findWhere" />
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
	</select>

	<select id="findPageFromPayInfoCount" resultType="int">
		SELECT count(*)
		FROM cl_finance_statement bt
		where bt.fuserrole_id = #{fuserroleId} and
		bt.fbusiness_type not in(11,12)
	</select>
	<select id="findPageFromPayInfo" resultMap="CL_FinanceStatementMap">
		SELECT bt.fid
		,bt.fcreate_time createTimeString,bt.number ,bt.forder_id
		forderId,bt.fbusiness_type fbusinessType,bt.famount
		,bt.ftype,bt.fpay_type fpayType,bt.fremark,bt.fbalance, bt.fstatus
		FROM cl_finance_statement bt
		where bt.fuserrole_id = #{fuserroleId} and
		bt.fbusiness_type not in(11,12)
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
	</select>

	<select id="findPagePaysCount" resultType="long">
		SELECT count(*) FROM
		v_finance_statement bt
		LEFT JOIN cl_user_role user on user.id =
		bt.fuserrole_id
		where
		user.vmi_user_phone = #{fusername}
	</select>

	<select id="findPagePays" resultMap="CL_FinanceStatementMap">
		SELECT
		<include refid="columnsPays" />
		FROM v_finance_statement bt
		LEFT JOIN cl_finance cf ON cf.fid =
		bt.forder_id and cf.famount=bt.famount
		and cf.fuser_id=bt.fuserrole_id
		LEFT JOIN cl_user_role user on user.id = bt.fuserrole_id
		LEFT JOIN
		cl_car car on car.user_role_id = user.id
		where
		user.vmi_user_phone =
		#{fusername}
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
	</select>

	<!-- <select id="findPays" resultMap="CL_FinanceStatementMap">
		SELECT
		<include refid="columnsPays" />
		FROM v_finance_statement bt
		LEFT JOIN cl_finance cf ON cf.fid =
		bt.forder_id and cf.famount=bt.famount
		LEFT JOIN cl_user_role user on
		user.id = bt.fuserrole_id
		LEFT JOIN cl_car car on car.user_role_id =
		user.id
		where
		user.vmi_user_phone = #{fusername}
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
	</select> -->
	<!-- 司机导出用 -->
	<select id="findPays" resultMap="CL_FinanceStatementMap">
		SELECT
		<include refid="columns" />
		FROM cl_finance_statement bt
		LEFT JOIN cl_user_role user on user.id = bt.fuserrole_id
		LEFT JOIN cl_car car on car.user_role_id = bt.fuserrole_id
		where
		user.vmi_user_phone = #{fusername}
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
	</select>

	<select id="find" resultMap="CL_FinanceStatementMap">
		SELECT
		<include refid="columns" />
		FROM cl_finance_statement bt
		LEFT JOIN cl_finance cf ON cf.fid =
		bt.frelated_id
		LEFT JOIN cl_user_role user on user.id = bt.fuserrole_id
		LEFT JOIN cl_car car on car.user_role_id = bt.fuserrole_id
		left join
		cl_user_customer uc on uc.fuser_role_id = bt.fuserrole_id
		<include refid="findWhere" />
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
	</select>

	<select id="findRechargePage" resultType="java.util.Map">
		SELECT ifnull(bt.fcust_name,'') fcustName,bt.fsale_man
		fsaleMan,bt.fman_dept fmanDept,bt.user_phone
		userPhone,(bt.fmoney-bt.fadd_money) fmoney,bt.fadd_money
		faddMoney,bt.fcreate_time fcreateTime,bt.fbank_name fbankname
		FROM
		v_add_account bt
		<include refid="findWhere" />
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
	</select>

	<select id="findRechargePageCount" resultType="long">
		SELECT count(*) FROM v_add_account bt
		<include refid="findWhere" />
	</select>

	<select id="getById" resultMap="CL_FinanceStatementMap">
		SELECT
		<include refid="columnsall" />
		FROM cl_finance_statement bt
		where fid = #{fid}
	</select>

	<!-- 查询finance表的相关联frelated_id对应已成功的记录 -->
	<select id="findFrelatedIdList" resultType="long">
		SELECT COUNT(1) FROM
		cl_finance_statement bt
		where bt.fstatus = 1 and
		bt.frelated_id =
		#{frelatedId} and
		bt.fbusiness_type=#{fbusinesstype} and
		bt.fuserrole_id=#{userid} and 
		bt.ftype = #{ftype}
	</select>

	<select id="getByOrderIdAndBusBusinessType" resultMap="CL_FinanceStatementMap">
		SELECT
		<include refid="columnsall" />
		FROM cl_finance_statement bt
		where bt.forderId = #{forderId} and
		bt.fbusinessType = #{fbusinessType} and
		bt.fstatus = 0
	</select>

	<select id="getByUserAndType" resultMap="CL_FinanceStatementMap">
		SELECT
		<include refid="columnsall" />
		FROM cl_finance_statement bt
		where bt.fuserrole_id = #{userId} and bt.fstatus = 1 and ftype = #{type}
	</select>
	
	<select id="getByWait" resultMap="CL_FinanceStatementMap">
		select <include refid="columnsall" /> from cl_finance_statement bt
		where bt.fstatus = 0
	</select>
	
	<sql id="findWhere0">
	    <where>
		   	<if test="@Ognl@isNotEmpty(fcustId)">
			    AND cf.fuserrole_id =#{fcustId}
			</if>
		   	<if test="@Ognl@isNotEmpty(fverification)">
			    AND fverification =#{fverification}
			</if>
		   	<if test="@Ognl@isNotEmpty(fstartMonth)">
				 <if test="@Ognl@isNotEmpty(fendMonth)">
				    and left(date_format(cf.fcreate_time,'%Y-%m'),7) between #{fstartMonth} and #{fendMonth}
				</if> 
			</if> 
			and cf.fpay_type = 5 and fstatus = 1 
	    </where>
	</sql>
	
	
</mapper>

