<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="CL_UserRole">

    <resultMap id="ClUserRoleMap" type="com.pc.model.CL_UserRole">
        <result property="id" column="id"/>
        <result property="vmiUserFid" column="vmi_user_fid"/>
        <result property="roleId" column="role_id"/>
        <result property="createTime"  column="create_time"/>
        <result property="vmiUserName" column="vmi_user_name"/>
        <result property="vmiUserPhone" column="vmi_user_phone"/>
        <result property="alipayId" column="alipay_id"/>
        <result property="bankAccount" column="bank_account"/>
        <result property="bankName" column="bank_name"/>
        <result property="bankAddress" column="bank_address"/>
        <result property="endOrderTimes" column="end_order_times"/>
        <result property="rateTimes" column="rate_times"/>
        <result property="isProtocol" column="is_protocol"/>
        <result property="isPassIdentify" column="is_pass_identify"/>
        
        <result property="isSub" column="is_sub"/>
        <result property="fparentid" column="fparentid"/>
        <result property="fparentTel" column="fparent_tel"/>
        <result property="fpassword" column="fpassword"/>
        <result property="fbalance" column="fbalance"/>
        <result property="fpaypassword" column="fpaypassword"/>
        
    </resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
        ur.id ,ur.vmi_user_fid ,ur.role_id ,ur.create_time,ur.vmi_user_name fname,ur.vmi_user_phone,ur.alipay_id,ur.bank_account,ur.bank_name,ur.bank_address,ur.is_protocol,end_order_times,rate_times,ur.is_pass_identify,ur.is_sub,ur.fparentid,ur.fparent_tel,ur.fpassword,ur.fbalance,ur.fpaypassword
	    ]]>
	</sql>
	
	<!-- 给明细用的 -->
	<sql id="columns_cusname">
	    <![CDATA[
        ur.id ,ur.vmi_user_fid ,ur.role_id ,ur.create_time,ur.vmi_user_name fname,ur.vmi_user_phone,ur.alipay_id,ur.bank_account,ur.bank_name,ur.bank_address,ur.is_protocol,end_order_times,rate_times,ur.is_pass_identify,ur.is_sub,ur.fparentid,ur.fparent_tel,ur.fpassword,uc.fname uname,ur.fbalance,ur.fpaypassword
	    ]]>
	</sql>
	
    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
    <![CDATA[
         INSERT INTO cl_user_role (
	        id,
	        vmi_user_fid,
	        role_id,
	        create_time,
	        vmi_user_name,
	        vmi_user_phone,
	        is_sub,
	        fparentid,
	        fparent_tel,
	        fpassword,
	        fbalance,
	        fpaypassword
        ) VALUES (
        	#{id, jdbcType=INTEGER} ,
        	#{vmiUserFid, jdbcType=VARCHAR} ,
        	#{roleId, jdbcType=INTEGER} ,
        	#{createTime, jdbcType=TIMESTAMP}, 
        	#{vmiUserName,jdbcType=VARCHAR},
        	#{vmiUserPhone,jdbcType=VARCHAR},
        	#{isSub, jdbcType=INTEGER} ,
        	#{fparentid, jdbcType=INTEGER} ,
        	#{fparentTel,jdbcType=VARCHAR},
        	#{fpassword,jdbcType=VARCHAR},
        	#{fbalance,jdbcType=DECIMAL},
        	#{fpaypassword,jdbcType=VARCHAR}
        )
    ]]>
    </insert>
	    
    <update id="update" >
    <![CDATA[
         UPDATE cl_user_role SET
	        vmi_user_fid = #{vmiUserFid, jdbcType=VARCHAR} ,
	        role_id = #{roleId, jdbcType=INTEGER} ,
	        create_time = #{createTime, jdbcType=TIMESTAMP},
	        vmi_user_name=#{vmiUserName,jdbcType=VARCHAR},
	        vmi_user_phone=#{vmiUserPhone,jdbcType=VARCHAR},
	        alipay_id=#{alipayId,jdbcType=VARCHAR},
	        bank_account=#{bankAccount,jdbcType=VARCHAR},
	        bank_name=#{bankName,jdbcType=VARCHAR},
	        bank_address=#{bankAddress,jdbcType=VARCHAR},
			is_protocol=#{isProtocol,jdbcType=BIT},
			is_sub=#{isSub, jdbcType=INTEGER} ,
	        fparentid=#{fparentid, jdbcType=INTEGER} ,
	        fparent_tel=#{fparentTel,jdbcType=VARCHAR},
	        fpassword=#{fpassword,jdbcType=VARCHAR},
        	fbalance=#{fbalance,jdbcType=DECIMAL},
        	fpaypassword=#{fpaypassword,jdbcType=VARCHAR}
        WHERE 
	        id = #{id} 
    ]]>
    </update>
    
    <update id="updateAcount" >
    <![CDATA[
         UPDATE cl_user_role SET
	        alipay_id=#{alipayId,jdbcType=VARCHAR},
	        bank_account=#{bankAccount,jdbcType=VARCHAR},
	        bank_name=#{bankName,jdbcType=VARCHAR},
	        bank_address=#{bankAddress,jdbcType=VARCHAR}
        WHERE 
	        id = #{id} 
    ]]>
    </update>
    
    <update id="updateTimes" > 
    <![CDATA[
        UPDATE cl_user_role SET
		end_order_times = #{endOrderTimes, jdbcType=INTEGER},
		rate_times = #{rateTimes, jdbcType=INTEGER}
        WHERE 
	        id = #{id} 
    ]]>
    </update>
    
    <update id="updateProtocol" > 
    <![CDATA[
        UPDATE cl_user_role SET
		is_protocol = #{isProtocol, jdbcType=BIT}
        WHERE 
	        id = #{id} 
    ]]>
    </update>
    
    <update id="updateIsPassIdentify" > 
    <![CDATA[
        UPDATE cl_user_role SET
		is_pass_identify = #{isPassIdentify, jdbcType=BIT}
        WHERE 
	        id = #{id} 
    ]]>
    </update>
    
    <update id="updateSubNum" > 
    <![CDATA[
        UPDATE cl_user_role SET
			vmi_user_name=#{vmiUserName,jdbcType=VARCHAR},
	        vmi_user_phone=#{vmiUserPhone,jdbcType=VARCHAR},
	        fpassword=#{fpassword,jdbcType=VARCHAR}
        WHERE 
	        id = #{id} and is_sub=1
    ]]>
    </update>
    
    <delete id="delete">
    <![CDATA[
        DELETE FROM cl_user_role WHERE
        id = #{id} 
    ]]>
    </delete>
    
    <delete id="deleteSubNum">
    <![CDATA[
        DELETE FROM cl_user_role WHERE
        id = #{id} and is_sub=1
    ]]>
    </delete>
    
    <select id="getByVmiUserFid" resultMap="ClUserRoleMap">
	    SELECT <include refid="columns"/>
	    <![CDATA[
	        FROM cl_user_role ur
	        WHERE 
		        ur.vmi_user_fid = #{vmiUserFid} and  ur.is_sub=0
	    ]]>
    </select>
    
     <select id="getByVmiUserFidAndRoleId" resultMap="ClUserRoleMap">
	    SELECT <include refid="columns"/>
	    <![CDATA[
	        FROM cl_user_role ur
	        WHERE 
		        ur.vmi_user_fid = #{vmiUserFid}  and ur.role_id=#{roleId} and is_sub=0
	    ]]>
    </select>
    
     <select id="getByPhoneAndRoleId" resultMap="ClUserRoleMap">
	    SELECT <include refid="columns"/>
	    <![CDATA[
	        FROM cl_user_role ur
	        WHERE 
		        ur.vmi_user_phone = #{ftel}  and ur.role_id=#{roleId} and is_sub=0
	    ]]>
    </select>
    
    <select id="getById" resultMap="ClUserRoleMap">
	    SELECT <include refid="columns"/>
	    <![CDATA[
	        FROM cl_user_role ur
	        WHERE 
		        ur.id = #{id} 
	    ]]>
    </select>
     <select id="getByRoleId" resultMap="ClUserRoleMap">
	    SELECT <include refid="columns"/>
	    <![CDATA[
	        FROM cl_user_role ur
	        WHERE 
		        ur.role_id = #{roleId} 
	    ]]>
    </select>
    
    <select id="getByVmiUserName" resultMap="ClUserRoleMap">
	    SELECT id
	    <![CDATA[
	        FROM cl_user_role ur
	        WHERE 
		       ur.vmi_user_name  LIKE CONCAT('%',#{searchKey},'%')
	    ]]>
    </select>
    
    
    <select id="getByVmiUserNameAccurate" resultMap="ClUserRoleMap">
	    SELECT <include refid="columns"/>
	    <![CDATA[
	        FROM cl_user_role ur  WHERE  ur.vmi_user_name = #{vmiUserName}
	    ]]>
    </select>
	 
    <select id="getByFparentidCount" resultType="long">
        SELECT count(*) FROM cl_user_role ur
	        WHERE 
		        ur.fparentid = #{fparentid}     
    </select>
 	
     <select id="getByFparentid" resultMap="ClUserRoleMap">
	    SELECT <include refid="columns"/>
	    <![CDATA[
	        FROM cl_user_role ur
	        WHERE 
		        ur.fparentid = #{fparentid} 
	    ]]>
    </select>
 	
     <select id="getByFparentidAndSub" resultMap="ClUserRoleMap">
	    SELECT <include refid="columns"/>
	    <![CDATA[
	        FROM cl_user_role ur
	        WHERE 
		        ur.fparentid = #{fparentid} and ur.id = #{id} 
	    ]]>
    </select>
 	
     <select id="getByFpassword" resultMap="ClUserRoleMap">
	    SELECT <include refid="columns"/>
	    <![CDATA[
	        FROM cl_user_role ur
	        WHERE 
		        (ur.vmi_user_name = #{vmiUserName} or ur.vmi_user_phone = #{vmiUserName}) and ur.fpassword = #{fpassword} and is_sub=1
	    ]]>
    </select>
 	
 	<!-- 子帐号手机号查询 -->
     <select id="getByPhone" resultMap="ClUserRoleMap">
	    SELECT <include refid="columns"/>
	    <![CDATA[
	        FROM cl_user_role ur
	        WHERE 
		        ur.vmi_user_phone = #{vmiUserPhone} 
	    ]]>
    </select>
    
	<sql id="findWhere">
	    <where>
		   	<if test="@Ognl@isNotEmpty(id)">
			    AND ur.id = #{id}
			</if>
			<if test="@Ognl@isNotEmpty(vmiUserFid)">
	   			AND ur.vmi_user_fid = #{vmiUserFid}
	   		</if>
		   	<if test="@Ognl@isNotEmpty(roleId)">
			    AND ur.role_id = #{roleId}
			</if>
			<if test="@Ognl@isNotEmpty(vmiUserName)">
			    AND (ur.vmi_user_name LIKE CONCAT('%',#{vmiUserName},'%') or ur.vmi_user_phone LIKE CONCAT('%',#{vmiUserName},'%') )
			</if>
			<if test="@Ognl@isNotEmpty(vmiUserPhone)">
			    AND ur.vmi_user_phone = #{vmiUserPhone}
			</if>
	    </where>
	</sql>
	 
    <select id="findPageCount" resultType="long">
        SELECT count(*) FROM cl_user_role ur
        left join cl_role r on r.id = ur.role_id
        <include refid="findWhere"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 #offset#,#pageSize#,#lastRows# 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findPage" resultMap="ClUserRoleMap">
    	SELECT <include refid="columns"/> FROM cl_user_role ur
        left join cl_role r on r.id = ur.role_id
		<include refid="findWhere"/>
		ORDER BY ur.create_time DESC 
    </select>
    
    <sql id="findWhere_cusname">
	    <where>
		   	<if test="@Ognl@isNotEmpty(id)">
			    AND ur.id = #{id}
			</if>
			<if test="@Ognl@isNotEmpty(vmiUserFid)">
	   			AND ur.vmi_user_fid = #{vmiUserFid}
	   		</if>
		   	<if test="@Ognl@isNotEmpty(roleId)">
			    AND ur.role_id = #{roleId}
			</if>
			<if test="@Ognl@isNotEmpty(vmiUserName)">
			    AND (ur.vmi_user_name LIKE CONCAT('%',#{vmiUserName},'%') or ur.vmi_user_phone LIKE CONCAT('%',#{vmiUserName},'%') )
			</if>
			<if test="@Ognl@isNotEmpty(vmiUserPhone)">
			    AND ur.vmi_user_phone = #{vmiUserPhone}
			</if>
    		<if test="@Ognl@isNotEmpty(fname) ">
    			and uc.fname like concat('%',#{fname},'%')
    		</if>
	    </where>
	</sql>
    
     <!-- 改动！！！！！！！！ -->
    <select id="findPage_cusnameCount" resultType="long">
        SELECT count(*) FROM cl_user_role ur
        left join cl_role r on r.id = ur.role_id
         left join cl_user_customer uc on ur.id = uc.fuser_role_id
        <include refid="findWhere_cusname"/>    
    </select>

 <!--
		增加客户名称查询
    -->
	<select id="findPage_cusname" resultMap="ClUserRoleMap">
    	SELECT <include refid="columns_cusname"/> FROM cl_user_role ur
        left join cl_role r on r.id = ur.role_id
        left join cl_user_customer uc on ur.id = uc.fuser_role_id
		<include refid="findWhere_cusname"/>
		ORDER BY ur.create_time DESC 
    </select>	
	
	
	<sql id="findWhere2">
	    <where>
		   	<if test="@Ognl@isNotEmpty(id)">
			    AND ur.id = #{id}
			</if>
			<if test="@Ognl@isNotEmpty(vmiUserFid)">
	   			AND ur.vmi_user_fid = #{vmiUserFid}
	   		</if>
	   		<!-- 只检索所有货主\所有司机 -->
		   	<if test="@Ognl@isNotEmpty(roleId) and  roleId!=0 ">
			    AND ur.role_id = #{roleId}
			</if>
			<!-- 检索所有的货主和司机 -->
			<if test="@Ognl@isNotEmpty(roleId) and  roleId==0 ">
			    AND ( ur.role_id = 1 or ur.role_id = 2 )
			</if>
	    </where>
	</sql>
	
	<select id="find" resultMap="ClUserRoleMap">
	    SELECT <include refid="columns"/>FROM cl_user_role ur
        left join cl_role r on r.id = ur.role_id
		<include refid="findWhere2"/>
		ORDER BY ur.create_time DESC 
    </select>
	
	<!--2016-5-7 by lu 货主下拉表数据来源 -->
	<select id="getComboxGridData" resultType="java.util.Map">
   		SELECT ur.id, IFNULL(id.name,ur.vmi_user_phone) name,ur.vmi_user_phone phone
	    FROM  CL_USER_ROLE ur LEFT JOIN cl_identification id
	    ON ur.id = id.user_role_id  
	    WHERE ur.role_id=1 
	    <if test="@Ognl@isNotEmpty(searchKey)">
	    AND (ur.vmi_user_phone  LIKE CONCAT('%',#{searchKey},'%') or id.name LIKE CONCAT('%',#{searchKey},'%') )
	    </if>	     
	    GROUP BY ur.id
    </select>
</mapper>
