<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="CL_Feedback">

    <resultMap id="CL_FeedbackMap" type="com.pc.model.CL_Feedback">
        <result property="id" column="id"/>
        <result property="content" column="content"/>
        <result property="fphone" column="fphone"/>
        <result property="creatorId" column="creator_id"/>
        <result property="createTime" column="create_time"/>
    </resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
        fdb.id ,fdb.content ,fdb.fphone ,fdb.creator_id ,fdb.create_time,ur.vmi_user_fid creatorId,ur.vmi_user_name creatorName
	    ]]>
	</sql>
	
    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
    <![CDATA[
        INSERT INTO cl_feedback (
	        id  ,
	        content ,
	        fphone  ,
	        creator_id  ,
	        create_time  
        ) VALUES (
        	#{id, jdbcType=INTEGER} ,
        	#{content, jdbcType=VARCHAR} ,
        	#{fphone, jdbcType=VARCHAR} ,
        	#{creatorId, jdbcType=INTEGER} , 
        	#{createTime, jdbcType=TIMESTAMP} 
        )
    ]]>
    </insert>

    <update id="update" >
    <![CDATA[
        UPDATE cl_feedback SET
	        content = #{content, jdbcType=VARCHAR} ,
        	fphone  = #{fphone, jdbcType=VARCHAR} ,
	        creator_id = #{creatorId, jdbcType=VARCHAR} ,
	        create_time = #{createTime, jdbcType=TIMESTAMP} 
        WHERE 
	        id = #{id} 
    ]]>
    </update>

    <delete id="delete">
    <![CDATA[
        DELETE FROM cl_feedback WHERE
        id = #{id} 
    ]]>
    </delete>
    
    <select id="getById" resultMap="CL_FeedbackMap">
	    SELECT <include refid="columns"/>
	    <![CDATA[
	        FROM cl_feedback fdb
        	LEFT JOIN cl_user_role ur on fdb.creator_id=ur.id
	        WHERE 
		        fdb.id = #{id} 
	    ]]>
    </select>

	<sql id="findWhere">
	    <where>
		   	<if test="@Ognl@isNotEmpty(id)">
			    AND fdb.id = #{id}
			</if>
		   	<if test="@Ognl@isNotEmpty(fphone)">
			    AND fdb.fphone = #{fphone}
			</if>
		   	<if test="@Ognl@isNotEmpty(creatorId)">
			    AND fdb.creator_id = #{creatorId}
			</if>
		   	<if test="@Ognl@isNotEmpty(createTimeBegin)">
		   		AND fdb.create_time >= #{createTimeBegin}
		   	</if>
		   	<if test="@Ognl@isNotEmpty(createTimeEnd)">
		   		AND fdb.create_time &lt; #{createTimeEnd}
		   	</if>
		
	    </where>
	</sql>
	 
    <select id="findPageCount" resultType="long">
        SELECT count(*) FROM cl_feedback fdb
        LEFT JOIN cl_user_role ur on fdb.creator_id=ur.id
        <include refid="findWhere"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 #offset#,#pageSize#,#lastRows# 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findPage" resultMap="CL_FeedbackMap">
    	SELECT <include refid="columns"/> FROM cl_feedback fdb
	 	left join cl_user_role ur on fdb.creator_id=ur.id 
		<include refid="findWhere"/>
		ORDER BY fdb.create_time DESC
    </select>
	
	
	<select id="find" resultMap="CL_FeedbackMap">
	    SELECT <include refid="columns"/> FROM cl_feedback fdb
	 	left join cl_user_role ur on fdb.creator_id=ur.id 
		<include refid="findWhere"/>
		ORDER BY fdb.create_time DESC
    </select>
	
</mapper>

