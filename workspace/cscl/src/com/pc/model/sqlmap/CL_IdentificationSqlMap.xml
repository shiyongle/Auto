<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="CL_Identification">

    <resultMap id="CL_IdentificationMap" type="com.pc.model.CL_Identification">
        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="userRoleId" column="user_role_id"/>
        <result property="type" column="type"/>
        <result property="status" column="status"/>
        <result property="createTime" column="create_time"/>
        <result property="backReason" column="back_reason"/>
        <result property="auditTime" column="audit_time"/>
    </resultMap>
    
	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
        cli.id,
		cli. NAME,
		cli.user_role_id,
		cli.type,
		cli. STATUS,
		cli.create_time,
		cli.audit_time,
		cli.back_reason,
		ro.id roleId,
		ro. NAME roleName,
		ur.id userid,
		ur.vmi_user_fid fid,
		ur.vmi_user_name fname,
		ur.vmi_user_phone vmiUserPhone,
		ur.is_pass_identify passIdentify,
		if(cli.status=3 && ro.id = 2,car.carNum,'' ) as carNumber,
		if(cli.status=3 && ro.id = 2,car.driverCode,'') as driverCode,
	    if(cli.status=3 && ro.id = 2,car.driverName,'') as driverName,
	    spec.name  specName,
        type.name  typeName,
        car.carType carType,
        car.car_spec_id carSpecId,
        car.license_type licenseType,
        car.fluckDriver fluckDriver,
        car.active_area activeArea,
        ur.create_time registerTime
	    ]]>
	</sql>

	<sql id="columns1">
	    <![CDATA[
        cli.id,
		cli. NAME,
		cli.user_role_id,
		cli.type,
		cli. STATUS,
		cli.create_time,
		cli.audit_time,
		cli.back_reason,
		ro.id roleId,
		ro. NAME roleName,
		ur.id userid,
		ur.vmi_user_fid fid,
		ur.vmi_user_name fname,
		ur.vmi_user_phone vmiUserPhone,
		cus.fsales_man fsaleman,
		cus.fsales_man_dept fsalemanDept,
		cus.fregion fregion,
		ur.create_time registerTime
	    ]]>
	</sql>
	
    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
    <![CDATA[
        INSERT INTO cl_identification (
	        id  ,
	        user_role_id  ,
	        type  ,
	        status  ,
	        name  ,
	        create_time,
	        back_reason ,
	        audit_time
        ) VALUES (
        	#{id, jdbcType=INTEGER} ,
        	#{userRoleId, jdbcType=INTEGER} ,
        	#{type, jdbcType=INTEGER} ,
        	#{status, jdbcType=INTEGER} ,
        	#{name, jdbcType=VARCHAR} ,
        	#{createTime, jdbcType=TIMESTAMP},
        	#{backReason, jdbcType=VARCHAR},
        	#{auditTime, jdbcType=TIMESTAMP}
        )
    ]]>
    </insert>

    <update id="update" >
    <![CDATA[
        UPDATE cl_identification SET
	        user_role_id = #{userRoleId, jdbcType=INTEGER} ,
	        type = #{type, jdbcType=INTEGER} ,
	        status = #{status, jdbcType=INTEGER} ,
	        name = #{name, jdbcType=VARCHAR} ,
	        create_time = #{createTime, jdbcType=TIMESTAMP},
	        back_reason = #{backReason, jdbcType=VARCHAR},
	        audit_time = #{auditTime, jdbcType=TIMESTAMP}
        WHERE 
	        id = #{id} 
    ]]>
    </update>

    <delete id="delete">
    <![CDATA[
        DELETE FROM cl_identification WHERE
        id = #{id} 
    ]]>
    </delete>
      
   
    <delete id="deleteByRuleId">
    <![CDATA[
        DELETE FROM cl_identification WHERE
        user_role_id=#{userRoleId} and type=#{type}
    ]]>
    </delete>
    
      
    <select id="getById" resultMap="CL_IdentificationMap">
	    SELECT <include refid="columns"/>
	    <![CDATA[
        FROM cl_identification cli
    	LEFT JOIN cl_user_role ur ON ur.id = cli.user_role_id
		LEFT JOIN cl_role ro ON ro.id = ur.role_id
		LEFT JOIN cl_car car on car.user_role_id = case when cli.status=3 and ro.id = 2 then cli.user_role_id end 
		LEFT JOIN cl_car_spec spec on spec.id = car.car_spec_id
		LEFT JOIN cl_car_type type on type.id = car.carType
        WHERE 
	        cli.id = #{id} 
	    ]]>
    </select>
        
    <select id="getByUserRoleIdAndStatus" resultMap="CL_IdentificationMap">
	    SELECT <include refid="columns"/>
	    <![CDATA[
	        FROM cl_identification cli
	    	LEFT JOIN cl_user_role ur ON ur.id = cli.user_role_id
			LEFT JOIN cl_role ro ON ro.id = ur.role_id
			LEFT JOIN cl_car car on car.user_role_id = case when cli.status=3 and ro.id = 2 then cli.user_role_id end 
			LEFT JOIN cl_car_spec spec on spec.id = car.car_spec_id
			LEFT JOIN cl_car_type type on type.id = car.carType
	        WHERE 
		            cli.user_role_id = #{userRoleId}   and cli.status =#{status}
	    ]]>
    </select>
    
    <select id="getIdentificationsByStatus" resultMap="CL_IdentificationMap">
	    SELECT <include refid="columns"/>
	    <![CDATA[
	        FROM cl_identification cli
	    	LEFT JOIN cl_user_role ur ON ur.id = cli.user_role_id
			LEFT JOIN cl_role ro ON ro.id = ur.role_id
			LEFT JOIN cl_car car on car.user_role_id = case when cli.status=3 and ro.id = 2 then cli.user_role_id end 
			LEFT JOIN cl_car_spec spec on spec.id = car.car_spec_id
			LEFT JOIN cl_car_type type on type.id = car.carType
	        WHERE 
		        cli.status = #{id} 
	    ]]>
    </select>
    
    <!-- 用于根据UserRoleId查询状态-->
    <select id="getStatusByUserRoleId" resultMap="CL_IdentificationMap">
	    <![CDATA[
	        SELECT id,status FROM cl_identification cli
	        WHERE 
		        cli.user_role_id = #{id} and cli.status !=4
	    ]]>
    </select>
    
    <!-- 主要用于登录排除被驳回状态的用户-->
    <select id="getByUserRoleId" resultMap="CL_IdentificationMap">
	    SELECT <include refid="columns"/>
	    <![CDATA[
	        FROM cl_identification cli
	    	LEFT JOIN cl_user_role ur ON ur.id = cli.user_role_id
			LEFT JOIN cl_role ro ON ro.id = ur.role_id
			LEFT JOIN cl_car car on car.user_role_id = case when cli.status=3 and ro.id = 2 then cli.user_role_id end 
			LEFT JOIN cl_car_spec spec on spec.id = car.car_spec_id
			LEFT JOIN cl_car_type type on type.id = car.carType
	        WHERE 
		        cli.user_role_id = #{id}   and cli.status !=4 
	    ]]>
    </select>
        <!-- 查询认证-->
    <select id="getByUserRoleIdAndRz" resultMap="CL_IdentificationMap">
	    SELECT <include refid="columns"/>
	    <![CDATA[
	        FROM cl_identification cli
	    	LEFT JOIN cl_user_role ur ON ur.id = cli.user_role_id
			LEFT JOIN cl_role ro ON ro.id = ur.role_id
			LEFT JOIN cl_car car on car.user_role_id = case when cli.status=3 and ro.id = 2 then cli.user_role_id end 
			LEFT JOIN cl_car_spec spec on spec.id = car.car_spec_id
			LEFT JOIN cl_car_type type on type.id = car.carType
	        WHERE cli.user_role_id = #{id}   and cli.status !=4  
		   ORDER BY create_time ASC
	    ]]>
    </select>
    
    <select id="getByUserRoleIdAndType" resultMap="CL_IdentificationMap">
	    	SELECT <include refid="columns"/>
	    <![CDATA[
	        FROM cl_identification cli
	    	LEFT JOIN cl_user_role ur ON ur.id = cli.user_role_id
			LEFT JOIN cl_role ro ON ro.id = ur.role_id
			LEFT JOIN cl_car car on car.user_role_id = case when cli.status=3 and ro.id = 2 then cli.user_role_id end 
			LEFT JOIN cl_car_spec spec on spec.id = car.car_spec_id
			LEFT JOIN cl_car_type type on type.id = car.carType
	        WHERE cli.user_role_id = #{userRoleId} and cli.type =#{type}  and cli.status !=4
	    ]]>
    </select>

	<sql id="findWhere">
	    <where>
		   	<if test="@Ognl@isNotEmpty(id)">
			    AND cli.id = #{id}
			</if>
		   	<if test="@Ognl@isNotEmpty(userRoleId)">
		   		<if test="userRoleId!=0">  
		   			AND ro.id = #{userRoleId}
		   		</if>
			</if>
		   	<if test="@Ognl@isNotEmpty(type)">
		   		<if test="type!=0">
		   			AND cli.type = #{type}
		   		</if>
			</if>
		   	<if test="@Ognl@isNotEmpty(userid)">
		   		<if test="userid!=0">
		   			AND ur.id = #{userid}
		   		</if>
			</if>
			<if test="@Ognl@isNotEmpty(fusername)">
			    AND cli.name LIKE CONCAT('%',#{fusername},'%')
			</if>
			<if test="@Ognl@isNotEmpty(ftel)">
			    AND ur.vmi_user_phone LIKE CONCAT('%',#{ftel},'%')
			</if>
		   	<if test="@Ognl@isNotEmpty(status)">
		   		<if test="status!=0">
		   			AND cli.status = #{status}
		   		</if>
			</if>
			AND cli.status !=0 
	    </where>
	</sql>
	 
    <select id="findPageCount" resultType="long">
        SELECT count(*) FROM cl_identification cli
    	LEFT JOIN cl_user_role ur ON ur.id = cli.user_role_id
		LEFT JOIN cl_role ro ON ro.id = ur.role_id
		LEFT JOIN cl_car car on car.user_role_id = case when cli.status=3 and ro.id = 2 then cli.user_role_id end 
		LEFT JOIN cl_car_spec spec on spec.id = car.car_spec_id
		LEFT JOIN cl_car_type type on type.id = car.carType
    	<include refid="findWhere"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 #offset#,#pageSize#,#lastRows# 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    
    <select id="findPage" resultMap="CL_IdentificationMap">
    	SELECT <include refid="columns"/> 
    	FROM cl_identification cli
    	LEFT JOIN cl_user_role ur ON ur.id = cli.user_role_id
		LEFT JOIN cl_role ro ON ro.id = ur.role_id
		LEFT JOIN cl_car car on car.user_role_id = case when cli.status=3 and ro.id = 2 then cli.user_role_id end 
		LEFT JOIN cl_car_spec spec on spec.id = car.car_spec_id
		LEFT JOIN cl_car_type type on type.id = car.carType
		<include refid="findWhere"/>
		ORDER BY cli.status ASC,cli.create_time DESC
    </select>
    
    <select id="findHuoPage" resultMap="CL_IdentificationMap">
    	SELECT <include refid="columns1"/> 
    	FROM cl_identification cli
    	LEFT JOIN cl_user_role ur ON ur.id = cli.user_role_id
		LEFT JOIN cl_role ro ON ro.id = ur.role_id
    	LEFT JOIN cl_user_customer cus ON cus.fuser_role_id = cli.user_role_id
		<include refid="findWhere"/>
		ORDER BY cli.status ASC,cli.create_time DESC
    </select>
    
    <select id="findHuoPageCount" resultType="long">
    	SELECT count(*)
    	FROM cl_identification cli
    	LEFT JOIN cl_user_role ur ON ur.id = cli.user_role_id
		LEFT JOIN cl_role ro ON ro.id = ur.role_id
    	LEFT JOIN cl_user_customer cus ON cus.fuser_role_id = cli.user_role_id
		<include refid="findWhere"/>
		ORDER BY cli.status ASC,cli.create_time DESC
    </select>
	
	<select id="find" resultMap="CL_IdentificationMap">
	    SELECT <include refid="columns"/> 
	    FROM cl_identification cli
    	LEFT JOIN cl_user_role ur ON ur.id = cli.user_role_id
		LEFT JOIN cl_role ro ON ro.id = ur.role_id
		LEFT JOIN cl_car car on car.user_role_id = case when cli.status=3 and ro.id = 2 then cli.user_role_id end 
		LEFT JOIN cl_car_spec spec on spec.id = car.car_spec_id
		LEFT JOIN cl_car_type type on type.id = car.carType
		<include refid="findWhere"/>
		ORDER BY cli.create_time DESC
    </select>
    
    <delete id="deleteByUserRoleId">
    	delete from cl_identification where user_role_id  = #{userRoleId}
    </delete>
	
</mapper>

